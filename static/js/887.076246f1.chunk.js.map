{"version":3,"file":"static/js/887.076246f1.chunk.js","mappings":"4QAEaA,EAASC,EAAAA,GAAAA,IAAH,oFAMNC,EAAaD,EAAAA,GAAAA,IAAH,+JAWVE,EAAcF,EAAAA,GAAAA,IAAH,4I,SCgExB,I,4BAAA,EAhFA,YAAgC,IAAVG,EAAS,EAATA,MACdC,GAAMC,EAAAA,EAAAA,UASZ,OACE,UAACN,EAAD,YACE,UAACE,EAAD,CAAYG,IAAKA,EAAKE,MAAO,CAAEC,MATlB,WACf,IAAIC,EAIJ,OAHKC,MAAMN,KACTK,EAAI,UAAME,OAAOP,GAAb,MAECK,CACR,CAGyCG,IAAtC,WACE,gBAAKJ,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,oHACFD,KAAK,eAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,oHACFD,KAAK,eAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,oHACFD,KAAK,eAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,oHACFD,KAAK,eAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,oHACFD,KAAK,kBAIX,UAACZ,EAAD,YACE,gBAAKK,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,4qGACFD,KAAK,aAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,4qGACFD,KAAK,aAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,4qGACFD,KAAK,aAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,4qGACFD,KAAK,aAGT,gBAAKP,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,4qGACFD,KAAK,iBAMhB,EC/EYE,EAAYhB,EAAAA,GAAAA,IAAH,2FAMTiB,EAAQjB,EAAAA,GAAAA,GAAH,kHAOLkB,EAAkBlB,EAAAA,GAAAA,IAAH,wGAOfmB,EAAQnB,EAAAA,GAAAA,KAAH,8NAYLoB,EAAapB,EAAAA,GAAAA,IAAH,gIAQVqB,EAAcrB,EAAAA,GAAAA,KAAH,sBAEXsB,EAAWtB,EAAAA,GAAAA,KAAH,8KAWRuB,EAAYvB,EAAAA,GAAAA,KAAH,uHAOTwB,EAAexB,EAAAA,GAAAA,KAAH,gJAUZyB,EAAWzB,EAAAA,GAAAA,EAAH,6GAOR0B,EAAiB1B,EAAAA,GAAAA,IAAH,0CAId2B,EAAc3B,EAAAA,GAAAA,OAAH,yXAqBX4B,GAAY5B,EAAAA,EAAAA,IAAO2B,EAAP3B,CAAH,qJAQT6B,EAAU7B,EAAAA,GAAAA,KAAH,4KCbpB,EA7EgB,SAAC,GAAY,IAAV8B,EAAS,EAATA,GACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAML,GAAN,iGAEOM,EAAAA,EAAAA,GAAWN,GAFlB,UAENO,EAFM,wDAMZJ,EAASI,GANG,gDAQZC,MAAMC,MAAM,wBARA,yDAAH,sDAWbJ,EAAQL,EACT,GAAE,CAACA,IAEJ,IAMM3B,EAAQO,OAAO8B,SAA8B,GAArBR,EAAMS,cAC9BC,EAPY,WAChB,GAAqB,IAAjBV,EAAMW,OAER,OADeX,EAAMY,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,GAGxC,CAEqBC,GAEtB,OACmB,IAAjBhB,EAAMiB,SACJ,UAACjC,EAAD,WACG0B,IACC,SAACxB,EAAD,UACGwB,EAAcG,KAAI,SAAAC,GAAK,OACtB,SAAC3B,EAAD,UAAoB2B,GAARA,EADU,OAK5B,SAAC7B,EAAD,UAAQe,EAAMe,QACd,UAAC3B,EAAD,YACE,SAACC,EAAD,UACGW,EAAMkB,iBACL,0BAAOlB,EAAMkB,eAAeC,MAAM,EAAG,QAGzC,UAAC7B,EAAD,wBAEE,SAACC,EAAD,6BAEF,UAACC,EAAD,uBAEE,UAACD,EAAD,WACGS,EAAMoB,kBADT,KAC8BpB,EAAMqB,mBADpC,uBAKJ,SAAC5B,EAAD,UAAWO,EAAMsB,YACjB,SAAC,EAAD,CAAYnD,MAAOA,KAEnB,UAACuB,EAAD,YACE,UAACE,EAAD,yBAEE,SAACC,EAAD,WACE,gBAAKtB,MAAM,KAAKK,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAArD,UACE,iBACEC,EAAE,suBACFD,KAAK,kBAKb,SAACa,EAAD,gCAKT,C,kIC/FK4B,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAa,mCAAG,WAAMC,GAAN,yFACGF,IAAAA,IAAUE,GADb,cACdC,EADc,gBAEDA,EAASC,KAFR,cAEdA,EAFc,yBAGbA,GAHa,2CAAH,sDAMNC,EAAS,mCAAG,oGAEfC,EAFe,6BAEcP,EAFd,mCAGRE,EAAcK,GAHN,wEAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDAST7B,EAAU,mCAAG,WAAMN,GAAN,uFAEhBgC,EAFgB,aAEHhC,EAFG,oBAEWyB,EAFX,4BAGTE,EAAcK,GAHL,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,qD","sources":["components/StarRating/StarRating.styled.js","components/StarRating/StarRating.jsx","components/Details/Details.styled.js","components/Details/Details.jsx","servises/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Rating = styled.div`\n  display: block;\n  width: 190px;\n  margin-bottom: 53px;\n`;\n\nexport const RatingLine = styled.div`\n  position: relative;\n  width: 0%;\n  height: 30px;\n  overflow: hidden;\n\n  & svg:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const RatingItems = styled.div`\n  position: absolute;\n  transform: translateY(-29px);\n\n  & svg:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n","import React, { useRef } from 'react';\nimport { RatingLine, RatingItems, Rating } from './StarRating.styled';\n\nfunction StarRating({ score }) {\n  const ref = useRef();\n\n  const setWidth = () => {\n    let size;\n    if (!isNaN(score)) {\n      size = `${Number(score)}%`;\n    }\n    return size;\n  };\n  return (\n    <Rating>\n      <RatingLine ref={ref} style={{ width: setWidth() }}>\n        <svg width=\"29\" height=\"28\" viewBox=\"0 0 30 28\" fill=\"none\">\n          <path\n            d=\"M15 0L10.45 9.22L0.280029 10.69L7.64003 17.87L5.90003 28L15 23.22L24.1 28L22.36 17.87L29.72 10.7L19.55 9.22L15 0Z\"\n            fill=\"#FFEA2B\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"28\" viewBox=\"0 0 30 28\" fill=\"none\">\n          <path\n            d=\"M15 0L10.45 9.22L0.280029 10.69L7.64003 17.87L5.90003 28L15 23.22L24.1 28L22.36 17.87L29.72 10.7L19.55 9.22L15 0Z\"\n            fill=\"#FFEA2B\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"28\" viewBox=\"0 0 30 28\" fill=\"none\">\n          <path\n            d=\"M15 0L10.45 9.22L0.280029 10.69L7.64003 17.87L5.90003 28L15 23.22L24.1 28L22.36 17.87L29.72 10.7L19.55 9.22L15 0Z\"\n            fill=\"#FFEA2B\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"28\" viewBox=\"0 0 30 28\" fill=\"none\">\n          <path\n            d=\"M15 0L10.45 9.22L0.280029 10.69L7.64003 17.87L5.90003 28L15 23.22L24.1 28L22.36 17.87L29.72 10.7L19.55 9.22L15 0Z\"\n            fill=\"#FFEA2B\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"28\" viewBox=\"0 0 30 28\" fill=\"none\">\n          <path\n            d=\"M15 0L10.45 9.22L0.280029 10.69L7.64003 17.87L5.90003 28L15 23.22L24.1 28L22.36 17.87L29.72 10.7L19.55 9.22L15 0Z\"\n            fill=\"#FFEA2B\"\n          />\n        </svg>\n      </RatingLine>\n      <RatingItems>\n        <svg width=\"29\" height=\"27\" viewBox=\"0 0 29 27\" fill=\"none\">\n          <path\n            d=\"M21.6583 26.3333C21.2901 26.333 20.9303 26.2227 20.625 26.0167L14.4083 21.85C14.3777 21.8289 14.3414 21.8175 14.3042 21.8175C14.267 21.8175 14.2306 21.8289 14.2 21.85L7.98334 26.0167C7.67117 26.2251 7.30297 26.3337 6.92765 26.3279C6.55233 26.3221 6.18764 26.2023 5.88201 25.9844C5.57638 25.7665 5.34426 25.4608 5.2165 25.1078C5.08873 24.7549 5.07135 24.3714 5.16667 24.0083L7.20834 16.8083C7.21799 16.7721 7.21682 16.7339 7.20497 16.6983C7.19312 16.6628 7.17112 16.6315 7.14167 16.6083L1.25834 11.9833C0.948621 11.7526 0.718879 11.4307 0.601326 11.0628C0.483774 10.6949 0.484306 10.2995 0.602847 9.93192C0.721389 9.56435 0.951996 9.2431 1.26233 9.0132C1.57267 8.78331 1.94718 8.6563 2.33334 8.65L9.83334 8.36666C9.87022 8.36412 9.90557 8.35096 9.93514 8.32878C9.96471 8.30661 9.98724 8.27635 10 8.24166L12.5833 1.21666C12.7136 0.860529 12.9501 0.553011 13.2608 0.335743C13.5716 0.118475 13.9416 0.00195312 14.3208 0.00195312C14.7 0.00195312 15.0701 0.118475 15.3808 0.335743C15.6916 0.553011 15.9281 0.860529 16.0583 1.21666L18.6417 8.24166C18.6544 8.27635 18.677 8.30661 18.7065 8.32878C18.7361 8.35096 18.7715 8.36412 18.8083 8.36666L26.3083 8.65C26.6945 8.6563 27.069 8.78331 27.3793 9.0132C27.6897 9.2431 27.9203 9.56435 28.0388 9.93192C28.1574 10.2995 28.1579 10.6949 28.0404 11.0628C27.9228 11.4307 27.6931 11.7526 27.3833 11.9833L21.5 16.6083C21.4697 16.6308 21.447 16.662 21.4351 16.6978C21.4231 16.7336 21.4225 16.7722 21.4333 16.8083L23.475 24.0083C23.5467 24.2845 23.5538 24.5735 23.4958 24.8528C23.4378 25.1322 23.3162 25.3944 23.1406 25.6193C22.9649 25.8441 22.7398 26.0254 22.4828 26.1493C22.2257 26.2731 21.9436 26.3361 21.6583 26.3333ZM14.3083 20.15C14.6774 20.1613 15.0345 20.2832 15.3333 20.5L21.55 24.6667C21.5815 24.6906 21.6199 24.7037 21.6595 24.704C21.6991 24.7043 21.7377 24.6918 21.7696 24.6684C21.8014 24.645 21.8249 24.6118 21.8364 24.574C21.8479 24.5361 21.8468 24.4955 21.8333 24.4583L19.7917 17.2583C19.6912 16.9051 19.6986 16.53 19.813 16.181C19.9273 15.8321 20.1433 15.5253 20.4333 15.3L26.3167 10.675C26.3488 10.6525 26.3728 10.6202 26.3852 10.583C26.3976 10.5458 26.3978 10.5056 26.3857 10.4683C26.3735 10.431 26.3498 10.3986 26.3179 10.3758C26.2859 10.353 26.2476 10.341 26.2083 10.3417L18.7083 10.0583C18.3411 10.044 17.9865 9.92064 17.6896 9.70395C17.3928 9.48726 17.1672 9.18707 17.0417 8.84166L14.4583 1.81666C14.4467 1.77936 14.4234 1.74676 14.392 1.72361C14.3605 1.70046 14.3224 1.68797 14.2833 1.68797C14.2443 1.68797 14.2062 1.70046 14.1747 1.72361C14.1432 1.74676 14.12 1.77936 14.1083 1.81666L11.55 8.83333C11.4245 9.17874 11.1989 9.47893 10.9021 9.69562C10.6052 9.91231 10.2506 10.0357 9.88334 10.05L2.38334 10.3333C2.34412 10.3327 2.30574 10.3447 2.27383 10.3674C2.24191 10.3902 2.21815 10.4227 2.20603 10.46C2.1939 10.4973 2.19406 10.5375 2.20648 10.5747C2.21889 10.6119 2.24291 10.6441 2.27501 10.6667L8.16667 15.3C8.45579 15.526 8.67117 15.8328 8.78543 16.1815C8.89969 16.5303 8.90767 16.9051 8.80834 17.2583L6.77501 24.4583C6.76287 24.4944 6.76281 24.5334 6.77484 24.5695C6.78687 24.6056 6.81033 24.6368 6.84167 24.6583C6.87186 24.6842 6.91028 24.6983 6.95001 24.6983C6.98973 24.6983 7.02815 24.6842 7.05834 24.6583L13.275 20.4917C13.5788 20.2901 13.9354 20.1829 14.3 20.1833L14.3083 20.15Z\"\n            fill=\"white\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"27\" viewBox=\"0 0 29 27\" fill=\"none\">\n          <path\n            d=\"M21.6583 26.3333C21.2901 26.333 20.9303 26.2227 20.625 26.0167L14.4083 21.85C14.3777 21.8289 14.3414 21.8175 14.3042 21.8175C14.267 21.8175 14.2306 21.8289 14.2 21.85L7.98334 26.0167C7.67117 26.2251 7.30297 26.3337 6.92765 26.3279C6.55233 26.3221 6.18764 26.2023 5.88201 25.9844C5.57638 25.7665 5.34426 25.4608 5.2165 25.1078C5.08873 24.7549 5.07135 24.3714 5.16667 24.0083L7.20834 16.8083C7.21799 16.7721 7.21682 16.7339 7.20497 16.6983C7.19312 16.6628 7.17112 16.6315 7.14167 16.6083L1.25834 11.9833C0.948621 11.7526 0.718879 11.4307 0.601326 11.0628C0.483774 10.6949 0.484306 10.2995 0.602847 9.93192C0.721389 9.56435 0.951996 9.2431 1.26233 9.0132C1.57267 8.78331 1.94718 8.6563 2.33334 8.65L9.83334 8.36666C9.87022 8.36412 9.90557 8.35096 9.93514 8.32878C9.96471 8.30661 9.98724 8.27635 10 8.24166L12.5833 1.21666C12.7136 0.860529 12.9501 0.553011 13.2608 0.335743C13.5716 0.118475 13.9416 0.00195312 14.3208 0.00195312C14.7 0.00195312 15.0701 0.118475 15.3808 0.335743C15.6916 0.553011 15.9281 0.860529 16.0583 1.21666L18.6417 8.24166C18.6544 8.27635 18.677 8.30661 18.7065 8.32878C18.7361 8.35096 18.7715 8.36412 18.8083 8.36666L26.3083 8.65C26.6945 8.6563 27.069 8.78331 27.3793 9.0132C27.6897 9.2431 27.9203 9.56435 28.0388 9.93192C28.1574 10.2995 28.1579 10.6949 28.0404 11.0628C27.9228 11.4307 27.6931 11.7526 27.3833 11.9833L21.5 16.6083C21.4697 16.6308 21.447 16.662 21.4351 16.6978C21.4231 16.7336 21.4225 16.7722 21.4333 16.8083L23.475 24.0083C23.5467 24.2845 23.5538 24.5735 23.4958 24.8528C23.4378 25.1322 23.3162 25.3944 23.1406 25.6193C22.9649 25.8441 22.7398 26.0254 22.4828 26.1493C22.2257 26.2731 21.9436 26.3361 21.6583 26.3333ZM14.3083 20.15C14.6774 20.1613 15.0345 20.2832 15.3333 20.5L21.55 24.6667C21.5815 24.6906 21.6199 24.7037 21.6595 24.704C21.6991 24.7043 21.7377 24.6918 21.7696 24.6684C21.8014 24.645 21.8249 24.6118 21.8364 24.574C21.8479 24.5361 21.8468 24.4955 21.8333 24.4583L19.7917 17.2583C19.6912 16.9051 19.6986 16.53 19.813 16.181C19.9273 15.8321 20.1433 15.5253 20.4333 15.3L26.3167 10.675C26.3488 10.6525 26.3728 10.6202 26.3852 10.583C26.3976 10.5458 26.3978 10.5056 26.3857 10.4683C26.3735 10.431 26.3498 10.3986 26.3179 10.3758C26.2859 10.353 26.2476 10.341 26.2083 10.3417L18.7083 10.0583C18.3411 10.044 17.9865 9.92064 17.6896 9.70395C17.3928 9.48726 17.1672 9.18707 17.0417 8.84166L14.4583 1.81666C14.4467 1.77936 14.4234 1.74676 14.392 1.72361C14.3605 1.70046 14.3224 1.68797 14.2833 1.68797C14.2443 1.68797 14.2062 1.70046 14.1747 1.72361C14.1432 1.74676 14.12 1.77936 14.1083 1.81666L11.55 8.83333C11.4245 9.17874 11.1989 9.47893 10.9021 9.69562C10.6052 9.91231 10.2506 10.0357 9.88334 10.05L2.38334 10.3333C2.34412 10.3327 2.30574 10.3447 2.27383 10.3674C2.24191 10.3902 2.21815 10.4227 2.20603 10.46C2.1939 10.4973 2.19406 10.5375 2.20648 10.5747C2.21889 10.6119 2.24291 10.6441 2.27501 10.6667L8.16667 15.3C8.45579 15.526 8.67117 15.8328 8.78543 16.1815C8.89969 16.5303 8.90767 16.9051 8.80834 17.2583L6.77501 24.4583C6.76287 24.4944 6.76281 24.5334 6.77484 24.5695C6.78687 24.6056 6.81033 24.6368 6.84167 24.6583C6.87186 24.6842 6.91028 24.6983 6.95001 24.6983C6.98973 24.6983 7.02815 24.6842 7.05834 24.6583L13.275 20.4917C13.5788 20.2901 13.9354 20.1829 14.3 20.1833L14.3083 20.15Z\"\n            fill=\"white\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"27\" viewBox=\"0 0 29 27\" fill=\"none\">\n          <path\n            d=\"M21.6583 26.3333C21.2901 26.333 20.9303 26.2227 20.625 26.0167L14.4083 21.85C14.3777 21.8289 14.3414 21.8175 14.3042 21.8175C14.267 21.8175 14.2306 21.8289 14.2 21.85L7.98334 26.0167C7.67117 26.2251 7.30297 26.3337 6.92765 26.3279C6.55233 26.3221 6.18764 26.2023 5.88201 25.9844C5.57638 25.7665 5.34426 25.4608 5.2165 25.1078C5.08873 24.7549 5.07135 24.3714 5.16667 24.0083L7.20834 16.8083C7.21799 16.7721 7.21682 16.7339 7.20497 16.6983C7.19312 16.6628 7.17112 16.6315 7.14167 16.6083L1.25834 11.9833C0.948621 11.7526 0.718879 11.4307 0.601326 11.0628C0.483774 10.6949 0.484306 10.2995 0.602847 9.93192C0.721389 9.56435 0.951996 9.2431 1.26233 9.0132C1.57267 8.78331 1.94718 8.6563 2.33334 8.65L9.83334 8.36666C9.87022 8.36412 9.90557 8.35096 9.93514 8.32878C9.96471 8.30661 9.98724 8.27635 10 8.24166L12.5833 1.21666C12.7136 0.860529 12.9501 0.553011 13.2608 0.335743C13.5716 0.118475 13.9416 0.00195312 14.3208 0.00195312C14.7 0.00195312 15.0701 0.118475 15.3808 0.335743C15.6916 0.553011 15.9281 0.860529 16.0583 1.21666L18.6417 8.24166C18.6544 8.27635 18.677 8.30661 18.7065 8.32878C18.7361 8.35096 18.7715 8.36412 18.8083 8.36666L26.3083 8.65C26.6945 8.6563 27.069 8.78331 27.3793 9.0132C27.6897 9.2431 27.9203 9.56435 28.0388 9.93192C28.1574 10.2995 28.1579 10.6949 28.0404 11.0628C27.9228 11.4307 27.6931 11.7526 27.3833 11.9833L21.5 16.6083C21.4697 16.6308 21.447 16.662 21.4351 16.6978C21.4231 16.7336 21.4225 16.7722 21.4333 16.8083L23.475 24.0083C23.5467 24.2845 23.5538 24.5735 23.4958 24.8528C23.4378 25.1322 23.3162 25.3944 23.1406 25.6193C22.9649 25.8441 22.7398 26.0254 22.4828 26.1493C22.2257 26.2731 21.9436 26.3361 21.6583 26.3333ZM14.3083 20.15C14.6774 20.1613 15.0345 20.2832 15.3333 20.5L21.55 24.6667C21.5815 24.6906 21.6199 24.7037 21.6595 24.704C21.6991 24.7043 21.7377 24.6918 21.7696 24.6684C21.8014 24.645 21.8249 24.6118 21.8364 24.574C21.8479 24.5361 21.8468 24.4955 21.8333 24.4583L19.7917 17.2583C19.6912 16.9051 19.6986 16.53 19.813 16.181C19.9273 15.8321 20.1433 15.5253 20.4333 15.3L26.3167 10.675C26.3488 10.6525 26.3728 10.6202 26.3852 10.583C26.3976 10.5458 26.3978 10.5056 26.3857 10.4683C26.3735 10.431 26.3498 10.3986 26.3179 10.3758C26.2859 10.353 26.2476 10.341 26.2083 10.3417L18.7083 10.0583C18.3411 10.044 17.9865 9.92064 17.6896 9.70395C17.3928 9.48726 17.1672 9.18707 17.0417 8.84166L14.4583 1.81666C14.4467 1.77936 14.4234 1.74676 14.392 1.72361C14.3605 1.70046 14.3224 1.68797 14.2833 1.68797C14.2443 1.68797 14.2062 1.70046 14.1747 1.72361C14.1432 1.74676 14.12 1.77936 14.1083 1.81666L11.55 8.83333C11.4245 9.17874 11.1989 9.47893 10.9021 9.69562C10.6052 9.91231 10.2506 10.0357 9.88334 10.05L2.38334 10.3333C2.34412 10.3327 2.30574 10.3447 2.27383 10.3674C2.24191 10.3902 2.21815 10.4227 2.20603 10.46C2.1939 10.4973 2.19406 10.5375 2.20648 10.5747C2.21889 10.6119 2.24291 10.6441 2.27501 10.6667L8.16667 15.3C8.45579 15.526 8.67117 15.8328 8.78543 16.1815C8.89969 16.5303 8.90767 16.9051 8.80834 17.2583L6.77501 24.4583C6.76287 24.4944 6.76281 24.5334 6.77484 24.5695C6.78687 24.6056 6.81033 24.6368 6.84167 24.6583C6.87186 24.6842 6.91028 24.6983 6.95001 24.6983C6.98973 24.6983 7.02815 24.6842 7.05834 24.6583L13.275 20.4917C13.5788 20.2901 13.9354 20.1829 14.3 20.1833L14.3083 20.15Z\"\n            fill=\"white\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"27\" viewBox=\"0 0 29 27\" fill=\"none\">\n          <path\n            d=\"M21.6583 26.3333C21.2901 26.333 20.9303 26.2227 20.625 26.0167L14.4083 21.85C14.3777 21.8289 14.3414 21.8175 14.3042 21.8175C14.267 21.8175 14.2306 21.8289 14.2 21.85L7.98334 26.0167C7.67117 26.2251 7.30297 26.3337 6.92765 26.3279C6.55233 26.3221 6.18764 26.2023 5.88201 25.9844C5.57638 25.7665 5.34426 25.4608 5.2165 25.1078C5.08873 24.7549 5.07135 24.3714 5.16667 24.0083L7.20834 16.8083C7.21799 16.7721 7.21682 16.7339 7.20497 16.6983C7.19312 16.6628 7.17112 16.6315 7.14167 16.6083L1.25834 11.9833C0.948621 11.7526 0.718879 11.4307 0.601326 11.0628C0.483774 10.6949 0.484306 10.2995 0.602847 9.93192C0.721389 9.56435 0.951996 9.2431 1.26233 9.0132C1.57267 8.78331 1.94718 8.6563 2.33334 8.65L9.83334 8.36666C9.87022 8.36412 9.90557 8.35096 9.93514 8.32878C9.96471 8.30661 9.98724 8.27635 10 8.24166L12.5833 1.21666C12.7136 0.860529 12.9501 0.553011 13.2608 0.335743C13.5716 0.118475 13.9416 0.00195312 14.3208 0.00195312C14.7 0.00195312 15.0701 0.118475 15.3808 0.335743C15.6916 0.553011 15.9281 0.860529 16.0583 1.21666L18.6417 8.24166C18.6544 8.27635 18.677 8.30661 18.7065 8.32878C18.7361 8.35096 18.7715 8.36412 18.8083 8.36666L26.3083 8.65C26.6945 8.6563 27.069 8.78331 27.3793 9.0132C27.6897 9.2431 27.9203 9.56435 28.0388 9.93192C28.1574 10.2995 28.1579 10.6949 28.0404 11.0628C27.9228 11.4307 27.6931 11.7526 27.3833 11.9833L21.5 16.6083C21.4697 16.6308 21.447 16.662 21.4351 16.6978C21.4231 16.7336 21.4225 16.7722 21.4333 16.8083L23.475 24.0083C23.5467 24.2845 23.5538 24.5735 23.4958 24.8528C23.4378 25.1322 23.3162 25.3944 23.1406 25.6193C22.9649 25.8441 22.7398 26.0254 22.4828 26.1493C22.2257 26.2731 21.9436 26.3361 21.6583 26.3333ZM14.3083 20.15C14.6774 20.1613 15.0345 20.2832 15.3333 20.5L21.55 24.6667C21.5815 24.6906 21.6199 24.7037 21.6595 24.704C21.6991 24.7043 21.7377 24.6918 21.7696 24.6684C21.8014 24.645 21.8249 24.6118 21.8364 24.574C21.8479 24.5361 21.8468 24.4955 21.8333 24.4583L19.7917 17.2583C19.6912 16.9051 19.6986 16.53 19.813 16.181C19.9273 15.8321 20.1433 15.5253 20.4333 15.3L26.3167 10.675C26.3488 10.6525 26.3728 10.6202 26.3852 10.583C26.3976 10.5458 26.3978 10.5056 26.3857 10.4683C26.3735 10.431 26.3498 10.3986 26.3179 10.3758C26.2859 10.353 26.2476 10.341 26.2083 10.3417L18.7083 10.0583C18.3411 10.044 17.9865 9.92064 17.6896 9.70395C17.3928 9.48726 17.1672 9.18707 17.0417 8.84166L14.4583 1.81666C14.4467 1.77936 14.4234 1.74676 14.392 1.72361C14.3605 1.70046 14.3224 1.68797 14.2833 1.68797C14.2443 1.68797 14.2062 1.70046 14.1747 1.72361C14.1432 1.74676 14.12 1.77936 14.1083 1.81666L11.55 8.83333C11.4245 9.17874 11.1989 9.47893 10.9021 9.69562C10.6052 9.91231 10.2506 10.0357 9.88334 10.05L2.38334 10.3333C2.34412 10.3327 2.30574 10.3447 2.27383 10.3674C2.24191 10.3902 2.21815 10.4227 2.20603 10.46C2.1939 10.4973 2.19406 10.5375 2.20648 10.5747C2.21889 10.6119 2.24291 10.6441 2.27501 10.6667L8.16667 15.3C8.45579 15.526 8.67117 15.8328 8.78543 16.1815C8.89969 16.5303 8.90767 16.9051 8.80834 17.2583L6.77501 24.4583C6.76287 24.4944 6.76281 24.5334 6.77484 24.5695C6.78687 24.6056 6.81033 24.6368 6.84167 24.6583C6.87186 24.6842 6.91028 24.6983 6.95001 24.6983C6.98973 24.6983 7.02815 24.6842 7.05834 24.6583L13.275 20.4917C13.5788 20.2901 13.9354 20.1829 14.3 20.1833L14.3083 20.15Z\"\n            fill=\"white\"\n          />\n        </svg>\n        <svg width=\"29\" height=\"27\" viewBox=\"0 0 29 27\" fill=\"none\">\n          <path\n            d=\"M21.6583 26.3333C21.2901 26.333 20.9303 26.2227 20.625 26.0167L14.4083 21.85C14.3777 21.8289 14.3414 21.8175 14.3042 21.8175C14.267 21.8175 14.2306 21.8289 14.2 21.85L7.98334 26.0167C7.67117 26.2251 7.30297 26.3337 6.92765 26.3279C6.55233 26.3221 6.18764 26.2023 5.88201 25.9844C5.57638 25.7665 5.34426 25.4608 5.2165 25.1078C5.08873 24.7549 5.07135 24.3714 5.16667 24.0083L7.20834 16.8083C7.21799 16.7721 7.21682 16.7339 7.20497 16.6983C7.19312 16.6628 7.17112 16.6315 7.14167 16.6083L1.25834 11.9833C0.948621 11.7526 0.718879 11.4307 0.601326 11.0628C0.483774 10.6949 0.484306 10.2995 0.602847 9.93192C0.721389 9.56435 0.951996 9.2431 1.26233 9.0132C1.57267 8.78331 1.94718 8.6563 2.33334 8.65L9.83334 8.36666C9.87022 8.36412 9.90557 8.35096 9.93514 8.32878C9.96471 8.30661 9.98724 8.27635 10 8.24166L12.5833 1.21666C12.7136 0.860529 12.9501 0.553011 13.2608 0.335743C13.5716 0.118475 13.9416 0.00195312 14.3208 0.00195312C14.7 0.00195312 15.0701 0.118475 15.3808 0.335743C15.6916 0.553011 15.9281 0.860529 16.0583 1.21666L18.6417 8.24166C18.6544 8.27635 18.677 8.30661 18.7065 8.32878C18.7361 8.35096 18.7715 8.36412 18.8083 8.36666L26.3083 8.65C26.6945 8.6563 27.069 8.78331 27.3793 9.0132C27.6897 9.2431 27.9203 9.56435 28.0388 9.93192C28.1574 10.2995 28.1579 10.6949 28.0404 11.0628C27.9228 11.4307 27.6931 11.7526 27.3833 11.9833L21.5 16.6083C21.4697 16.6308 21.447 16.662 21.4351 16.6978C21.4231 16.7336 21.4225 16.7722 21.4333 16.8083L23.475 24.0083C23.5467 24.2845 23.5538 24.5735 23.4958 24.8528C23.4378 25.1322 23.3162 25.3944 23.1406 25.6193C22.9649 25.8441 22.7398 26.0254 22.4828 26.1493C22.2257 26.2731 21.9436 26.3361 21.6583 26.3333ZM14.3083 20.15C14.6774 20.1613 15.0345 20.2832 15.3333 20.5L21.55 24.6667C21.5815 24.6906 21.6199 24.7037 21.6595 24.704C21.6991 24.7043 21.7377 24.6918 21.7696 24.6684C21.8014 24.645 21.8249 24.6118 21.8364 24.574C21.8479 24.5361 21.8468 24.4955 21.8333 24.4583L19.7917 17.2583C19.6912 16.9051 19.6986 16.53 19.813 16.181C19.9273 15.8321 20.1433 15.5253 20.4333 15.3L26.3167 10.675C26.3488 10.6525 26.3728 10.6202 26.3852 10.583C26.3976 10.5458 26.3978 10.5056 26.3857 10.4683C26.3735 10.431 26.3498 10.3986 26.3179 10.3758C26.2859 10.353 26.2476 10.341 26.2083 10.3417L18.7083 10.0583C18.3411 10.044 17.9865 9.92064 17.6896 9.70395C17.3928 9.48726 17.1672 9.18707 17.0417 8.84166L14.4583 1.81666C14.4467 1.77936 14.4234 1.74676 14.392 1.72361C14.3605 1.70046 14.3224 1.68797 14.2833 1.68797C14.2443 1.68797 14.2062 1.70046 14.1747 1.72361C14.1432 1.74676 14.12 1.77936 14.1083 1.81666L11.55 8.83333C11.4245 9.17874 11.1989 9.47893 10.9021 9.69562C10.6052 9.91231 10.2506 10.0357 9.88334 10.05L2.38334 10.3333C2.34412 10.3327 2.30574 10.3447 2.27383 10.3674C2.24191 10.3902 2.21815 10.4227 2.20603 10.46C2.1939 10.4973 2.19406 10.5375 2.20648 10.5747C2.21889 10.6119 2.24291 10.6441 2.27501 10.6667L8.16667 15.3C8.45579 15.526 8.67117 15.8328 8.78543 16.1815C8.89969 16.5303 8.90767 16.9051 8.80834 17.2583L6.77501 24.4583C6.76287 24.4944 6.76281 24.5334 6.77484 24.5695C6.78687 24.6056 6.81033 24.6368 6.84167 24.6583C6.87186 24.6842 6.91028 24.6983 6.95001 24.6983C6.98973 24.6983 7.02815 24.6842 7.05834 24.6583L13.275 20.4917C13.5788 20.2901 13.9354 20.1829 14.3 20.1833L14.3083 20.15Z\"\n            fill=\"white\"\n          />\n        </svg>\n      </RatingItems>\n    </Rating>\n  );\n}\n\nexport default StarRating;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 864px;\n  color: #ffffff;\n  padding: 0 38px 47px 0;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 33px;\n  font-size: 64px;\n  line-height: 1.2;\n  letter-spacing: 5.5%;\n`;\n\nexport const GenresContainer = styled.div`\n  display: flex;\n  font-weight: 500;\n  font-size: 32px;\n  margin: 0 0 27px;\n`;\n\nexport const Genre = styled.span`\n  &:not(:first-child) {\n    margin-left: 20px;\n  }\n  &:not(:first-child):before {\n    content: '';\n    border-left: 2px solid #fff;\n    margin-right: 20px;\n    background-color: green;\n  }\n`;\n\nexport const Attributes = styled.div`\n  display: flex;\n  font-size: 30px;\n  font-weight: 500;\n  line-height: 1.2;\n  margin-bottom: 26px;\n`;\n\nexport const ReleaseDate = styled.span``;\n\nexport const Director = styled.span`\n  text-transform: uppercase;\n  margin-left: 20px;\n\n  &:before {\n    content: '';\n    border-left: 2px solid #fff;\n    margin-right: 20px;\n  }\n`;\n\nexport const AttrValue = styled.span`\n  text-transform: capitalize;\n  font-weight: normal;\n  color: #a7a6a6;\n  margin-left: 8px;\n`;\n\nexport const EpisodesInfo = styled.span`\n  margin-left: 20px;\n\n  &:before {\n    content: '';\n    border-left: 2px solid #fff;\n    margin-right: 20px;\n  }\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 36px;\n  font-size: 24px;\n  line-height: 1.17;\n  color: #a7a6a6;\n`;\n\nexport const ButtonsSection = styled.div`\n  display: flex;\n`;\n\nexport const BasicButton = styled.button`\n  min-width: 272px;\n  padding: 16px 34px;\n  border-radius: 10px;\n  border: 3px solid #fff;\n\n  color: #fff;\n  background-color: transparent;\n  text-transform: uppercase;\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.45;\n  transition: transform 100ms linear;\n\n  &:hover,\n  &:focus,\n  &:active {\n    transform: scale(1.05);\n  }\n`;\n\nexport const StreamBtn = styled(BasicButton)`\n  display: flex;\n  align-items: center;\n  background-color: #d40d1f;\n  border-color: transparent;\n  margin-right: 50px;\n`;\n\nexport const BtnIcon = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 32px;\n  height: 32px;\n  margin-left: 16px;\n`;\n","import React, { useEffect, useState } from 'react';\n\nimport { getDetails } from '../../servises/API';\nimport StarRating from 'components/StarRating/StarRating';\n\nimport {\n  Container,\n  GenresContainer,\n  Genre,\n  Attributes,\n  Title,\n  ReleaseDate,\n  Director,\n  AttrValue,\n  EpisodesInfo,\n  BasicButton,\n  StreamBtn,\n  BtnIcon,\n  ButtonsSection,\n  Overview,\n} from './Details.styled';\n\nconst Details = ({ id }) => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const getData = async id => {\n      try {\n        const resp = await getDetails(id);\n        if (!resp) {\n          return;\n        }\n        setMovie(resp);\n      } catch (error) {\n        alert.error('Something went wrong');\n      }\n    };\n    getData(id);\n  }, [id]);\n\n  const getGenres = () => {\n    if (movie.length !== 0) {\n      const genres = movie.genres.map(genre => genre.name);\n      return genres;\n    }\n  };\n  const score = Number.parseInt(movie.vote_average * 10);\n  const genresContent = getGenres();\n\n  return (\n    movie.lenght !== 0 && (\n      <Container>\n        {genresContent && (\n          <GenresContainer>\n            {genresContent.map(genre => (\n              <Genre key={genre}>{genre}</Genre>\n            ))}\n          </GenresContainer>\n        )}\n        <Title>{movie.name}</Title>\n        <Attributes>\n          <ReleaseDate>\n            {movie.first_air_date && (\n              <span>{movie.first_air_date.slice(0, 4)}</span>\n            )}\n          </ReleaseDate>\n          <Director>\n            Director:\n            <AttrValue>Shawn Levy</AttrValue>\n          </Director>\n          <EpisodesInfo>\n            seasons:\n            <AttrValue>\n              {movie.number_of_seasons} ({movie.number_of_episodes} episodes)\n            </AttrValue>\n          </EpisodesInfo>\n        </Attributes>\n        <Overview>{movie.overview}</Overview>\n        <StarRating score={score} />\n\n        <ButtonsSection>\n          <StreamBtn>\n            Stream now\n            <BtnIcon>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path\n                  d=\"M14 0C6.26875 0 0 6.26875 0 14C0 21.7313 6.26875 28 14 28C21.7313 28 28 21.7313 28 14C28 6.26875 21.7313 0 14 0ZM18.5031 14.2156L11.6781 19.1812C11.6407 19.2081 11.5966 19.2242 11.5507 19.2276C11.5047 19.2311 11.4587 19.2218 11.4177 19.2008C11.3767 19.1798 11.3422 19.1479 11.3182 19.1087C11.2941 19.0694 11.2813 19.0242 11.2812 18.9781V9.05313C11.2811 9.00696 11.2937 8.96165 11.3178 8.92222C11.3418 8.8828 11.3762 8.85079 11.4173 8.82976C11.4584 8.80873 11.5046 8.79948 11.5506 8.80305C11.5966 8.80663 11.6408 8.82288 11.6781 8.85L18.5031 13.8125C18.5354 13.8353 18.5617 13.8655 18.5798 13.9006C18.598 13.9357 18.6075 13.9746 18.6075 14.0141C18.6075 14.0536 18.598 14.0925 18.5798 14.1275C18.5617 14.1626 18.5354 14.1928 18.5031 14.2156Z\"\n                  fill=\"white\"\n                />\n              </svg>\n            </BtnIcon>\n          </StreamBtn>\n          <BasicButton>All episodes</BasicButton>\n        </ButtonsSection>\n      </Container>\n    )\n  );\n};\n\nexport default Details;\n","import axios from 'axios';\n\nconst API_KEY = 'd181f6aed649ea703d889941a0afb502';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getTVShowData = async searchLink => {\n  const response = await axios.get(searchLink);\n  const data = await response.data;\n  return data;\n};\n\nexport const getTrends = async () => {\n  try {\n    const link = `tv/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    return await getTVShowData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const link = `tv/${id}?api_key=${API_KEY}&language=en-US`;\n    return await getTVShowData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Rating","styled","RatingLine","RatingItems","score","ref","useRef","style","width","size","isNaN","Number","setWidth","height","viewBox","fill","d","Container","Title","GenresContainer","Genre","Attributes","ReleaseDate","Director","AttrValue","EpisodesInfo","Overview","ButtonsSection","BasicButton","StreamBtn","BtnIcon","id","useState","movie","setMovie","useEffect","getData","getDetails","resp","alert","error","parseInt","vote_average","genresContent","length","genres","map","genre","name","getGenres","lenght","first_air_date","slice","number_of_seasons","number_of_episodes","overview","API_KEY","axios","getTVShowData","searchLink","response","data","getTrends","link","console","log","message"],"sourceRoot":""}