{"version":3,"file":"static/js/200.9ab438be.chunk.js","mappings":"2TAEaA,EAAYC,EAAAA,GAAAA,IAAH,sBAETC,EAAQD,EAAAA,GAAAA,EAAH,0LASLE,EAAmBF,EAAAA,GAAAA,IAAH,kEAIhBG,EAAkBH,EAAAA,GAAAA,IAAH,yGAOfI,EAAeJ,EAAAA,GAAAA,IAAH,8LAWZK,EAAYL,EAAAA,GAAAA,KAAH,+JASTM,EAAeN,EAAAA,GAAAA,KAAH,iH,SCwCzB,EArEe,SAAC,GAAsB,IAApBO,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACvB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEOC,EAAAA,EAAAA,KAFP,OAENC,EAFM,OAGZJ,GAAU,OAAII,EAAKC,UAHP,gDAKZC,MAAMC,MAAM,wBALA,yDAAH,qDAQbL,GACD,GAAE,IAEH,IAAMM,EAAkB,SAAAC,GAAC,OAAIA,EAAEC,gBAAN,EAEnBC,EAAc,SAAAF,GAClBZ,EAAMY,EAAEG,cAAcC,GACvB,EACKC,EAAQf,EAAOgB,KAAI,SAAAC,GAAI,OAC3B,gBACEC,IACED,EAAKE,YACD,uDACAF,EAAKE,YACL,sCAENC,MAAO,CAAEC,OAAQ,oBAAqBC,MAAO,QAASC,OAAQ,SAC9DC,YAAaf,EACbgB,KAAK,eACLX,GAAIG,EAAKH,GACTY,IAAKT,EAAKU,KACVC,QAAShB,GAbgB,IAgB7B,OACE,UAACvB,EAAD,YACE,SAACE,EAAD,UAAQM,KACR,UAACL,EAAD,YACE,UAACC,EAAD,YACE,SAAC,IAAD,CACEoC,UAAQ,EACRC,iBAAiB,OACjBC,iBAAiB,MACjBC,kBAAkB,OAClBC,eAAa,EACbC,qBAAmB,EACnBC,UAAQ,EACRC,WAAY,CACV,EAAG,CAAErB,MAAO,GACZ,IAAK,CAAEA,MAAO,GACd,KAAM,CAAEA,MAAO,GACf,KAAM,CAAEA,MAAO,IAEjBsB,oBAAkB,EAClBtB,MAAOA,KAET,4BAEF,UAACrB,EAAD,YACE,SAACE,EAAD,KACA,SAACD,EAAD,0BAKT,C,kIChFK2C,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAa,mCAAG,WAAMC,GAAN,yFACGF,IAAAA,IAAUE,GADb,cACdC,EADc,gBAEDA,EAASC,KAFR,cAEdA,EAFc,yBAGbA,GAHa,2CAAH,sDAMNvC,EAAS,mCAAG,oGAEfwC,EAFe,6BAEcN,EAFd,mCAGRE,EAAcI,GAHN,wEAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDASTC,EAAU,mCAAG,WAAMlC,GAAN,uFAEhB8B,EAFgB,aAEH9B,EAFG,oBAEWwB,EAFX,4BAGTE,EAAcI,GAHL,wEAKtBC,QAAQC,IAAI,KAAMC,SALI,yDAAH,qD","sources":["components/Trends/Trends.styled.js","components/Trends/Trends.jsx","servises/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const Title = styled.p`\n  margin-bottom: 32px;\n  color: #ffffff;\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: 22px;\n  letter-spacing: 13.5%;\n  line-height: 1.45;\n`;\nexport const ContentContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const SliderContainer = styled.div`\n  max-width: 660px;\n  @media (min-width: 1024px) {\n    max-width: 912px;\n  }\n`;\n\nexport const AgeRatingBox = styled.div`\n  display: flex;\n  align-items: center;\n\n  margin-left: auto;\n  width: 174px;\n  height: 66px;\n\n  color: #fff;\n  background-color: rgba(255, 255, 255, 0.49);\n`;\nexport const AgeRating = styled.span`\n  display: inline-block;\n  text-align: center;\n  padding: 20px 26px;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.42;\n`;\n\nexport const RatingAccent = styled.span`\n  display: inline-block;\n  width: 33px;\n  height: 66px;\n  background-color: #d40d1f;\n`;\n","import React, { useState, useEffect } from 'react';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nimport { getTrends } from 'servises/API';\nimport {\n  Container,\n  Title,\n  SliderContainer,\n  AgeRating,\n  AgeRatingBox,\n  RatingAccent,\n  ContentContainer,\n} from './Trends.styled';\n\nconst Trends = ({ title, getId }) => {\n  const [trends, setTrends] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const resp = await getTrends();\n        setTrends([...resp.results]);\n      } catch (error) {\n        alert.error('Something went wrong');\n      }\n    };\n    getData();\n  }, []);\n\n  const handleDragStart = e => e.preventDefault();\n\n  const handleClick = e => {\n    getId(e.currentTarget.id);\n  };\n  const items = trends.map(show => (\n    <img\n      src={\n        show.poster_path\n          ? 'https://www.themoviedb.org/t/p/w300_and_h450_bestv2/' +\n            show.poster_path\n          : 'https://via.placeholder.com/300x450'\n      }\n      style={{ border: '1px solid #ffffff', width: '148px', height: '208px' }}\n      onDragStart={handleDragStart}\n      role=\"presentation\"\n      id={show.id}\n      alt={show.name}\n      onClick={handleClick}\n    />\n  ));\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <ContentContainer>\n        <SliderContainer>\n          <AliceCarousel\n            autoPlay\n            autoPlayInterval=\"3000\"\n            autoPlayStrategy=\"all\"\n            animationDuration=\"1500\"\n            mouseTracking\n            disableDotsControls\n            infinite\n            responsive={{\n              0: { items: 2 },\n              678: { items: 3 },\n              1024: { items: 4 },\n              1440: { items: 5 },\n            }}\n            keyboardNavigation\n            items={items}\n          />\n          <></>\n        </SliderContainer>\n        <AgeRatingBox>\n          <RatingAccent />\n          <AgeRating>16+</AgeRating>\n        </AgeRatingBox>\n      </ContentContainer>\n    </Container>\n  );\n};\n\nexport default Trends;\n","import axios from 'axios';\n\nconst API_KEY = 'd181f6aed649ea703d889941a0afb502';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getTVShowData = async searchLink => {\n  const response = await axios.get(searchLink);\n  const data = await response.data;\n  return data;\n};\n\nexport const getTrends = async () => {\n  try {\n    const link = `tv/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    return await getTVShowData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const link = `tv/${id}?api_key=${API_KEY}&language=en-US`;\n    return await getTVShowData(link);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["Container","styled","Title","ContentContainer","SliderContainer","AgeRatingBox","AgeRating","RatingAccent","title","getId","useState","trends","setTrends","useEffect","getData","getTrends","resp","results","alert","error","handleDragStart","e","preventDefault","handleClick","currentTarget","id","items","map","show","src","poster_path","style","border","width","height","onDragStart","role","alt","name","onClick","autoPlay","autoPlayInterval","autoPlayStrategy","animationDuration","mouseTracking","disableDotsControls","infinite","responsive","keyboardNavigation","API_KEY","axios","getTVShowData","searchLink","response","data","link","console","log","message","getDetails"],"sourceRoot":""}